##nginx正向代理配置
##正向代理：正向代理的特点是客户端非常明确要访问的服务器地址；服务器只清楚请求来自哪个代理服务器，而不清楚来自哪个具体的客户端；正向代理模式屏蔽或者隐藏了真实客户端信息。将请求发送给代理服务器，代理服务器去访问国外的网站，然后将访问到的数据传递给我们！

##main模块：用于进行nginx全局信息的配置
#user  nobody;                      #user用来指定nginx worker进程运行用户以及用户组，默认nobody账号运行
worker_processes  1;                #worker_processes指定nginx要开启的子进程数量，运行过程中监控每个进程消耗内存
#error_log  logs/error.log;         #定义错误日志文件的位置及输出级别【debug / info / notice / warn / error / crit】
#error_log  logs/error.log  notice; #定义错误日志文件的位置及输出级别【debug / info / notice / warn / error / crit】
#error_log  logs/error.log  info;   #定义错误日志文件的位置及输出级别【debug / info / notice / warn / error / crit】
#pid    logs/nginx.pid;             #用来指定进程id的存储文件的位置

##events模块：用于nginx工作模式的配置
events {
    worker_connections  1024;       #指定最大可以同时接收的连接数量
}

##http模块：用于进行http协议信息的一些配置
http {
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;
	
	##upstream模块：用于进行负载均衡的配置

	##server模块：用于进行服务器访问信息的配置
	server {
		# 配置DNS解析IP地址，比如 Google Public DNS，以及超时时间（5秒）
		resolver 114.114.114.114;    # 必需dns
		resolver_timeout 5s;

		# 监听端口
		listen 8888;

		#用于指定该虚拟主机服务器中的访问记录日志存放路径
		#access_log  /home/reistlin/logs/proxy.access.log;
		#用于指定该虚拟主机服务器中访问错误日志的存放路径
		#error_log   /home/reistlin/logs/proxy.error.log;

		##location模块：用于进行访问路由的配置
		location / {
			# 配置正向代理参数
			proxy_pass http://$host$request_uri;
			# 解决如果URL中带"."后Nginx 503错误
			proxy_set_header Host $http_host;
			# 配置缓存大小
			#proxy_buffers 256 4k;
			# 关闭磁盘缓存读写减少I/O
			#proxy_max_temp_file_size 0;
			# 代理连接超时时间
			#proxy_connect_timeout 30;
			# 配置代理服务器HTTP状态缓存时间
			#proxy_cache_valid 200 302 10m;
			#proxy_cache_valid 301 1h;
			#proxy_cache_valid any 1m;
		}
	}
}

