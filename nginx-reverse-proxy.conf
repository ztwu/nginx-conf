##nginx反向代理配置
##反向代理：多个客户端给服务器发送的请求，nginx服务器接收到之后，按照一定的规则分发给了后端的业务处理服务器进行处理了。此时~请求的来源也就是客户端是明确的，但是请求具体由哪台服务器处理的并不明确了，nginx扮演的就是一个反向代理角色
##反向代理，主要用于服务器集群分布式部署的情况下，反向代理隐藏了服务器的信息！

##main模块：用于进行nginx全局信息的配置
#user  nobody;                      #user用来指定nginx worker进程运行用户以及用户组，默认nobody账号运行
worker_processes  1;                #worker_processes指定nginx要开启的子进程数量，运行过程中监控每个进程消耗内存
#error_log  logs/error.log;         #定义错误日志文件的位置及输出级别【debug / info / notice / warn / error / crit】
#error_log  logs/error.log  notice; #定义错误日志文件的位置及输出级别【debug / info / notice / warn / error / crit】
#error_log  logs/error.log  info;   #定义错误日志文件的位置及输出级别【debug / info / notice / warn / error / crit】
#pid    logs/nginx.pid;             #用来指定进程id的存储文件的位置

##events模块：用于nginx工作模式的配置
events {
    worker_connections  1024;       #指定最大可以同时接收的连接数量
}

##http模块：用于进行http协议信息的一些配置
http {
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;
	
	##upstream模块：用于进行负载均衡的配置
	upstream reverseserver {
		server 172.31.17.2:9100;
	}

	##server模块：用于进行服务器访问信息的配置
	server {
		# 监听端口
		listen 8888;
		
		server_name  www.elasticsearch.head.cn;#本地hosts文件中的域名映射

		#用于指定该虚拟主机服务器中的访问记录日志存放路径
		#access_log  /home/reistlin/logs/proxy.access.log;
		#用于指定该虚拟主机服务器中访问错误日志的存放路径
		#error_log   /home/reistlin/logs/proxy.error.log;

		##location模块：用于进行访问路由的配置
		location / {
			proxy_pass  http://reverseserver;
			
			#Proxy Settings
			proxy_redirect     off;
			proxy_set_header   Host             $host;
			proxy_set_header   X-Real-IP        $remote_addr;
			proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;
			proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
			proxy_max_temp_file_size 0;
			proxy_connect_timeout      90;
			proxy_send_timeout         90;
			proxy_read_timeout         90;
			proxy_buffer_size          4k;
			proxy_buffers              4 32k;
			proxy_busy_buffers_size    64k;
			proxy_temp_file_write_size 64k;
		}
	}
}

